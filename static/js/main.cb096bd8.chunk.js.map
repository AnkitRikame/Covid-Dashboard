{"version":3,"sources":["components/statewiseData/Statewise.js","App.js","index.js"],"names":["Statewise","useState","data","setData","getCovidData","a","fetch","resData","json","actualData","statewise","useEffect","className","map","currElem","ind","state","confirmed","recovered","deaths","active","lastupdatedtime","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOA4DeA,EAzDG,WACjB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,sEACEC,MAAM,0CADR,cACdC,EADc,gBAEKA,EAAQC,OAFb,OAEdC,EAFc,OAGpBN,EAAQM,EAAWC,WAHC,2CAAH,qDAUlB,OAJAC,qBAAU,WACNP,MACD,IAGF,8BAEC,sBAAKQ,UAAU,uBAAf,UACC,qBAAKA,UAAU,eAAf,SACC,qBAAIA,UAAU,mBAAd,UACC,sBAAMA,UAAU,mBAAhB,sBADD,0BAKD,qBAAKA,UAAU,mBAAf,SACC,wBAAOA,UAAU,oBAAjB,UACC,uBAAOA,UAAU,aAAjB,SACC,+BACC,uCACA,2CACA,2CACA,wCACA,wCACA,8CAIF,gCACEV,EAAKW,KAAI,SAACC,EAAUC,GACpB,OACC,+BACC,6BAAKD,EAASE,QACd,6BAAKF,EAASG,YACd,6BAAKH,EAASI,YACd,6BAAKJ,EAASK,SACd,6BAAKL,EAASM,SACd,6BAAKN,EAASO,oBANNN,mBC9BHO,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.cb096bd8.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./statewise.css\";\r\n\r\nconst Statewise = () => {\r\n\tconst [data, setData] = useState([]);\r\n\r\n\tconst getCovidData = async () => {\r\n\t\tconst resData = await fetch(\"https://api.covid19india.org/data.json\");\r\n\t\tconst actualData = await resData.json();\r\n\t\tsetData(actualData.statewise);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t   getCovidData();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* <h1>INDIA LIVE COVID-19 Dashboard</h1> */}\r\n\t\t\t<div className=\"container-fluid mt-5\">\r\n\t\t\t\t<div className=\"main-heading\">\r\n\t\t\t\t\t<h1 className=\"mb-5 text-center\">\r\n\t\t\t\t\t\t<span className=\"font-weight-bold\">INDIA'S </span>COVID-19 Dashboard\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t<table className=\"table table-hover\">\r\n\t\t\t\t\t\t<thead className=\"thead-dark\">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>State</th>\r\n\t\t\t\t\t\t\t\t<th>Confirmed</th>\r\n\t\t\t\t\t\t\t\t<th>Recovered</th>\r\n\t\t\t\t\t\t\t\t<th>Deaths</th>\r\n\t\t\t\t\t\t\t\t<th>Active</th>\r\n\t\t\t\t\t\t\t\t<th>Updated</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{data.map((currElem, ind) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<tr key={ind}>\r\n\t\t\t\t\t\t\t\t\t\t<td>{currElem.state}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{currElem.confirmed}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{currElem.recovered}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{currElem.deaths}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{currElem.active}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{currElem.lastupdatedtime}</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Statewise;\r\n","import React from 'react';\nimport Statewise from \"./components/statewiseData/Statewise\";\nimport './index.css';\n\nconst App = () => {\n  return (\n    <div>\n      <Statewise/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}